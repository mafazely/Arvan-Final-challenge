---
- name: Register bridge net filter
  become: true
  ansible.builtin.shell: lsmod | grep br_netfilter
  changed_when: false
  register: lsmod_grep_br_netfilter

- name: Activate br_netfilter
  become: true
  ansible.builtin.command: sudo modprobe br_netfilter
  when: "'br_netfilter' not in lsmod_grep_br_netfilter.stdout"

- name: Copy br_netfilter modules-load
  become: true
  ansible.builtin.copy:
    src: modules_load_k8s.conf
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: "a+x"

- name: Copy br_netfilter sysctl
  become: true
  ansible.builtin.copy:
    src: sysctl_k8s.conf
    dest: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: "a+x"
  register: copy_sysctl_br_netfilter

- name: Reload sysctl configs
  become: true
  ansible.builtin.command: sudo sysctl --system
  when: copy_sysctl_br_netfilter.changed

- name: Add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  retries: 3
  delay: 10
  register: result
  until: result is succeeded

- name: Add Kubernetes APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: "kubernetes"
  retries: 3
  delay: 10
  register: result
  until: result is succeeded

- name: Install kubelet
  apt:
    name: kubelet
    state: present
    update_cache: true
    cache_valid_time: 3600
  retries: 3
  delay: 10
  register: result
  until: result is succeeded

- name: Install kubeadm
  apt:
    name: kubeadm
    state: present
    update_cache: true
    cache_valid_time: 3600
  retries: 3
  delay: 10
  register: result
  until: result is succeeded
